angular.module("angularBootstrapNumberpicker",["src/numberpicker.html","angularBootstrapNumberpickerSource"]),angular.module("src/numberpicker.html",[]).run(["$templateCache",function(a){a.put("src/numberpicker.html",'<style type="text/css">\n/* Hide the up/down arrows that Chrome adds to the number input\n   http://stackoverflow.com/a/4298216/399105\n*/\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Hide them from Firefox too\n   http://stackoverflow.com/a/22559163/399105\n*/\ninput[type=\'number\'] {\n    -moz-appearance: textfield;\n}\n</style>\n<table>\n	<tbody>\n		<tr class="text-center">\n			<td><a ng-click="incrementValue()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n		</tr>\n		<tr name="myForm" ng-form ng-class="{\'has-error\': myForm.value.$invalid}">\n			<td>\n				<input type="number" class="form-control" name="value" max="{{max}}" min="{{min}}" ng-model="value" resizable-input>\n			</td>\n		</tr>\n		<tr class="text-center">\n			<td><a ng-click="decrementValue()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n		</tr>\n	</tbody>\n</table>\n')}]),angular.module("angularBootstrapNumberpickerSource",[]).constant("numberpickerConfig",{defaultValue:0,mousewheel:!0,valueStep:1}).controller("NumberpickerCtrl",["$scope","$attrs","numberpickerConfig",function(a,b,c){"defaultValue"in a?a.value=a.defaultValue:"defaultValue"in b?a.value=a.$eval(b.defaultValue):a.value=c.defaultValue,"mousewheel"in a||("mousewheel"in b?a.mousewheel=a.$eval(b.mousewheel):a.mousewheel=c.mousewheel),"valueStep"in a||("valueStep"in b?a.valueStep=a.$eval(b.valueStep):a.valueStep=c.valueStep),"max"in b&&(a.max=a.$eval(b.max)),"min"in b&&(a.min=a.$eval(b.min)),a.decrementValue=function(){angular.isDefined(a.min)&&a.value-a.valueStep<a.min?a.value=a.min:angular.isDefined(a.value)&&(a.value-=a.valueStep)},a.incrementValue=function(){angular.isDefined(a.max)&&a.value+a.valueStep>a.max?a.value=a.max:angular.isDefined(a.value)&&(a.value+=a.valueStep)}}]).directive("numberpicker",function(){return{restrict:"E",require:"?^ngModel",controller:"NumberpickerCtrl",templateUrl:"src/numberpicker.html",link:function(a,b,c,d){if(a.mousewheel){var e=function(a){a.originalEvent&&(a=a.originalEvent);var b=a.wheelDelta?a.wheelDelta:-a.deltaY;return a.detail||b>0};b.bind("mousewheel wheel",function(b){a.$apply(e(b)?a.incrementValue():a.decrementValue()),b.preventDefault()})}a.$watch("myForm.value.$viewValue",function(){d.$setViewValue(a.value)})}}}).directive("resizableInput",function(){return{restrict:"A",link:function(a,b,c){var d=angular.element('<span style="position:absolute;top:-9999px;"></span>');b.after(d),a.$watch("myForm.value.$viewValue",function(a){a&&(d.html(a),b.css("width",d[0].offsetWidth+30+"px"))})}}});